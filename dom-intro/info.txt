//* The DOM
//? Document Object Model
//? The DOM is a JavaScript representation of a webpage
//? Our "JS" window into the contents of a webpage
//? It's just a bunch of objects that you can interact with via JS

//* What happens when we load a page...
//? HTML and CSS documents go in, and JS Objects come out
//? JS objects inside of JS Objects
//? <body> <h1> <ul><li> </li></ul> </h1> </body> : These are all JS objects!

//* What is the Document?
//? The Document can be thought of as our top level folder for everything!
//? It contains representations of all the content on a page, plus tons of useful methods and properties
//? The "Root" of the tree

//* document.getElementById()
//? Used to access a certain JS Object in the document by its unique ID

//* document.getElementsByTagName()
//! The elementSSSSS part is crucial! 
//? Returns an HTML Collection of JS Objects within the DOM,
//? That are OF A CERTAIN TAG NAME.(i.e. a, p, img, h1, h2)

//* document.getElementsByClassName()
//! The elementSSSSS part is Crucial!!
//? Returns an HTML Collection of JS Objects within the DOM,
//? That are OF A CERTAIN CLASS NAME.('toctitle')

//* HTML Collection
//? The HTML Collection interface represents a generic Collection
//? of Elements(in document order) and offers methods and properties
//? for selecting from the list.

//! an HTML Collection IS NOT an array!!!
//? Array methods will NOT work! 
//? HTMLCollection is updated LIVE with DOM, so its wise to make a COPY of it
//? When trying to use array methods

//* .querySelector()
//? A newer, all in one method to select a single element
//? The Swiss army knife of selectors! 
//? Will only grab the first of what was requested(i.e the first paragraph)
//? What symbols to use?
//? # : ID : document.querySelector('#chicken');
//? . : class : document.querySelector('.h1');

//* .querySelectorAll()
//? Same idea, but returns a collection of matching elements 
//? Will by default grab everything of what was selected (i.e All paragraphs)

